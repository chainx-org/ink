[package]
name = "ink_core"
version = "0.1.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"

license = "GPL-3.0"
readme = "README.md"

repository = "https://github.com/paritytech/ink"
documentation = "https://github.com/paritytech/ink/wiki"
homepage = "https://www.parity.io/"

description = "[ink!] Rust based eDSL for writing smart contracts for Substrate"
keywords = ["wasm", "parity", "webassembly", "blockchain", "edsl"]
categories = ["no-std", "embedded"]

include = ["/Cargo.toml", "src/**/*.rs", "/README.md", "/LICENSE"]

[dependencies]
ink_abi = { path = "../abi/", default-features = false, features = ["derive"], optional = true }
ink_alloc = { path = "../alloc/", default-features = false }
ink_utils = { path = "../utils/", default-features = false }

scale = { package = "parity-scale-codec", version = "1.0", default-features = false, features = ["derive", "full"] }
old_scale = { package = "parity-codec", version = "3.5", default-features = false, features = ["derive", "full"] }
type-metadata = { git = "https://github.com/type-metadata/type-metadata.git", default-features = false, features = ["derive"], optional = true }
derive_more = { version = "0.15", default-features = false, features = ["no_std"] }
smallvec = { version = "0.6.10", default-features = false, features = ["union"] }
cfg-if = "0.1"

#xassets = { package = "xrml-xassets-assets", path = "../../../../../chainx/src/github.com/chainpool/ChainX/xrml/xassets/assets", default-features = false, features = ["no_panic_handler", "no_oom", "no_global_allocator"]}

xassets = { package = "xrml-xassets-assets", git = "https://github.com/JKingdom/ChainXPlaceholder", default-features = false, features = ["no_panic_handler", "no_oom", "no_global_allocator"]}

[features]
default = ["test-env"]
test-env = [
    "std",
]
std = [
    "ink_abi/std",
    "ink_alloc/std",
    "ink_utils/std",
    "scale/std",
    "old_scale/std",
    "type-metadata/std",
    "smallvec/std",
    "xassets/std",
]
ink-generate-abi = [
    "ink_abi",
    "type-metadata",
    "std",
]
old-codec = []
